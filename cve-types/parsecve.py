import xml.etree.ElementTree as ET
import argparse
import gzip

nistns = '{http://scap.nist.gov/schema/feed/vulnerability/2.0}'
xmlns = '{http://scap.nist.gov/schema/vulnerability/0.4}'

apptype = 'cpe:/a'
ostype = 'cpe:/o'
hwtype = 'cpe:/h'

def get_vuln_products(entry):
    products = set()
    for swlist in entry.findall(xmlns+'vulnerable-software-list'):
        for prod in swlist.findall(xmlns+'product'):
            products.add(prod.text)
    return products

def get_product_types(products):
    ptypes = set()
    for p in products:
        t = p[:6]
        ptypes.add(t)
    return ptypes

def get_breakdown(filename):
    with gzip.open(filename, 'rb') as f:
        data = f.read()

    types = {apptype:0, ostype:0, hwtype:0}
    count = 0
    root = ET.fromstring(data)
    for entry in root:
        products = get_vuln_products(entry)
        ptypes = get_product_types(products)

        if len(ptypes) > 0:
            if hwtype in ptypes:
                types[hwtype] += 1
            elif ostype in ptypes:
                types[ostype] += 1
            else:
                assert apptype in ptypes
                types[apptype] += 1
            count += 1

    sum = 0
    for t, cnt in types.iteritems():
        sum += cnt
    assert sum == count, (sum, count)
    return types[apptype], types[ostype], types[hwtype]

def readxml(filenames):
    for filename in filenames:
        app, os, hw = get_breakdown(filename)
        print '%40s %6d %6d %6d' % (filename, app, os, hw)

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('xmlfile', nargs='+')
    args = parser.parse_args()
    data = readxml(args.xmlfile)

if __name__ == '__main__':
    main()
